------- Current Program State ------
executionStack = 
| (Ref(int) v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v)))) |
, heap = {}
, symbolTable = {}
, output = []
, fileTable = {}
, originalProgram = (Ref(int) v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| Ref(int) v |
| (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))) |
, heap = {}
, symbolTable = {}
, output = []
, fileTable = {}
, originalProgram = (Ref(int) v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))) |
, heap = {}
, symbolTable = {v = (0, int)}
, output = []
, fileTable = {}
, originalProgram = (Ref(int) v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| v = 4 |
| (while(v > 0) { (print(v); v = v - 1) }; print(v)) |
, heap = {}
, symbolTable = {v = (0, int)}
, output = []
, fileTable = {}
, originalProgram = (Ref(int) v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v)))) |
, heap = {}
, symbolTable = {}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| int v |
| (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))) |
, heap = {}
, symbolTable = {}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))) |
, heap = {}
, symbolTable = {v = 0}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| v = 4 |
| (while(v > 0) { (print(v); v = v - 1) }; print(v)) |
, heap = {}
, symbolTable = {v = 0}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (while(v > 0) { (print(v); v = v - 1) }; print(v)) |
, heap = {}
, symbolTable = {v = 4}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 4}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (print(v); v = v - 1) |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 4}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| print(v) |
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 4}
, output = []
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 4}
, output = [4]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 3}
, output = [4]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (print(v); v = v - 1) |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 3}
, output = [4]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| print(v) |
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 3}
, output = [4]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 3}
, output = [4, 3]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 2}
, output = [4, 3]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (print(v); v = v - 1) |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 2}
, output = [4, 3]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| print(v) |
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 2}
, output = [4, 3]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 2}
, output = [4, 3, 2]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 1}
, output = [4, 3, 2]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| (print(v); v = v - 1) |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 1}
, output = [4, 3, 2]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| print(v) |
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 1}
, output = [4, 3, 2]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| v = v - 1 |
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 1}
, output = [4, 3, 2, 1]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| while(v > 0) { (print(v); v = v - 1) } |
| print(v) |
, heap = {}
, symbolTable = {v = 0}
, output = [4, 3, 2, 1]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 
| print(v) |
, heap = {}
, symbolTable = {v = 0}
, output = [4, 3, 2, 1]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


------- Current Program State ------
executionStack = 

, heap = {}
, symbolTable = {v = 0}
, output = [4, 3, 2, 1, 0]
, fileTable = {}
, originalProgram = (int v; (v = 4; (while(v > 0) { (print(v); v = v - 1) }; print(v))))


